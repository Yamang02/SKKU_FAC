<style>
    @import url('/css/admin/management/user/UserManagementDetail.css');
</style>

<!-- 페이지 헤더 -->
<div class="admin-user-detail">
    <div class="content-section">
        <h2 class="admin-title">회원상세</h2>
        <div class="section-content">
            <!-- 기본 정보 -->
            <div class="form-grid">
                <h3 class="section-subtitle">기본 정보</h3>
                <div class="form-group">
                    <label>ID</label>
                    <input type="text" value="<%= user.username %>" readonly>
                </div>
                <div class="form-group">
                    <label>이름</label>
                    <input type="text" value="<%= user.name %>" readonly>
                </div>
                <div class="form-group">
                    <label>이메일</label>
                    <input type="email" value="<%= user.email %>" readonly>
                </div>
                <div class="form-group">
                    <label>역할</label>
                    <select name="role" required>
                        <option value="ADMIN" <%=user.role==='ADMIN' ? 'selected' : '' %>>관리자</option>
                        <option value="SKKU_MEMBER" <%=user.role==='SKKU_MEMBER' ? 'selected' : '' %>>성균관대 구성원</option>
                        <option value="EXTERNAL_MEMBER" <%=user.role==='EXTERNAL_MEMBER' ? 'selected' : '' %>>외부인
                        </option>
                    </select>
                </div>
                <div class="form-group">
                    <label>상태</label>
                    <select name="status" required>
                        <option value="ACTIVE" <%=user.status==='ACTIVE' ? 'selected' : '' %>>활성</option>
                        <option value="INACTIVE" <%=user.status==='INACTIVE' ? 'selected' : '' %>>비활성</option>
                        <option value="BLOCKED" <%=user.status==='BLOCKED' ? 'selected' : '' %>>차단</option>
                    </select>
                </div>
            </div>

            <!-- 상세 정보 -->
            <div class="form-grid">
                <h3 class="section-subtitle">상세 정보</h3>
                <% if (user.role==='SKKU_MEMBER' || (user.role==='ADMIN' && user.department)) { %>
                    <div class="form-group">
                        <label>학과</label>
                        <input type="text" value="<%= user.department || '-' %>" readonly>
                    </div>
                    <div class="form-group">
                        <label>학년</label>
                        <input type="text" value="<%= user.studentYear || '-' %>" readonly>
                    </div>
                    <div class="form-group">
                        <label>동아리 회원</label>
                        <input type="text" value="<%= user.artistInfo?.isClubMember ? '예' : '아니오' %>" readonly>
                    </div>
                    <div class="form-group">
                        <label>회원 유형</label>
                        <input type="text" value="<%= user.artistInfo?.memberType === 'STUDENT' ? '학생' : '졸업생' %>"
                            readonly>
                    </div>
                    <% } else if (user.role==='EXTERNAL_MEMBER' ) { %>
                        <div class="form-group">
                            <label>소속</label>
                            <input type="text" value="<%= user.artistInfo?.affiliation || '-' %>" readonly>
                        </div>
                        <div class="form-group">
                            <label>소속 유형</label>
                            <input type="text"
                                value="<%= user.artistInfo?.affiliationType === 'INDIVIDUAL' ? '개인' : '단체' %>" readonly>
                        </div>
                        <% } %>
            </div>

            <!-- 시스템 정보 -->
            <div class="form-grid">
                <h3 class="section-subtitle">시스템 정보</h3>
                <div class="form-group">
                    <label>가입일</label>
                    <input type="text" value="<%= new Date(user.createdAt).toLocaleDateString() %>" readonly>
                </div>
                <div class="form-group">
                    <label>수정일</label>
                    <input type="text" value="<%= new Date(user.updatedAt).toLocaleDateString() %>" readonly>
                </div>
            </div>
        </div>
        <div class="section-footer">
            <div class="admin-button-group">
                <button class="admin-button admin-button--primary" onclick="handleSave()">
                    <i class="fas fa-save"></i>
                    저장
                </button>
                <button class="admin-button admin-button--danger" onclick="handleDelete()">
                    <i class="fas fa-trash"></i>
                    삭제
                </button>
            </div>
        </div>
    </div>
</div>

<div class="admin-back-button-container">
    <a onclick="history.back()" class="admin-button admin-button--backtolist">
        <i class="fas fa-list"></i>
        목록으로
    </a>
</div>

<script>
    async function handleSave() {
        const role = document.querySelector('select[name="role"]').value;
        const status = document.querySelector('select[name="status"]').value;

        try {
            const response = await fetch(`/admin/management/user/<%= user.id %>`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    role,
                    status
                })
            });

            const result = await response.json();

            if (result.success) {
                alert(result.message);
                window.location.href = '/admin/management/user';
            } else {
                alert(result.message || '회원 정보 저장 중 오류가 발생했습니다.');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('회원 정보 저장 중 오류가 발생했습니다.');
        }
    }

    async function handleDelete() {
        if (confirm('정말로 이 회원을 삭제하시겠습니까?\n\n' +
            '⚠️ 경고: 이 작업은 되돌릴 수 없습니다.\n' +
            '• 해당 회원의 모든 정보가 영구적으로 삭제됩니다.\n' +
            '• 회원과 관련된 모든 데이터가 함께 삭제됩니다.\n' +
            '• 이 작업은 되돌릴 수 없으므로 신중하게 결정해주세요.')) {

            try {
                const response = await fetch(`/admin/management/user/<%= user.id %>`, {
                    method: 'DELETE'
                });

                const result = await response.json();

                if (result.success) {
                    alert(result.message);
                    window.location.href = '/admin/management/user';
                } else {
                    alert(result.message || '회원 삭제 중 오류가 발생했습니다.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('회원 삭제 중 오류가 발생했습니다.');
            }
        }
    }

    function handleEdit() {
        const form = document.getElementById('userForm');
        const inputs = form.querySelectorAll('input, select');
        inputs.forEach(input => {
            if (input.type !== 'text' || input.value !== user.username) {
                input.readOnly = false;
                input.disabled = false;
            }
        });

        const actionButtons = `
        <button type="button" class="btn btn-success" onclick="handleSave()">
            저장
        </button>
        <button type="button" class="btn btn-secondary" onclick="handleCancel()">
            취소
        </button>
    `;
        document.querySelector('.action-buttons').innerHTML = actionButtons;
    }

    function handleCancel() {
        location.reload();
    }

    function handleResetPassword() {
        if (confirm('해당 사용자의 비밀번호를 초기화하시겠습니까?')) {
            // TODO: 비밀번호 초기화 로직 구현
        }
    }

    function handleBlockUser() {
        if (confirm('해당 사용자의 계정을 차단하시겠습니까?')) {
            // TODO: 계정 차단 로직 구현
        }
    }

    function handleUnblockUser() {
        if (confirm('해당 사용자의 계정 차단을 해제하시겠습니까?')) {
            // TODO: 차단 해제 로직 구현
        }
    }
</script>
