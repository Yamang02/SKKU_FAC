<style>
    @import url('/css/admin/management/user/UserManagementDetail.css');
</style>
<!-- 페이지 헤더 -->
<div class="admin-user-detail">
    <div class="content-section">
        <h2 class="admin-title">회원상세</h2>
        <div class="section-content">
            <div class="form-grid">
                <div class="form-group">
                    <label>ID</label>
                    <input type="text" value="<%= user.username %>" readonly>
                </div>
                <div class="form-group">
                    <label>이름</label>
                    <input type="text" value="<%= user.name %>" readonly>
                </div>
                <div class="form-group">
                    <label>학번</label>
                    <input type="text" value="<%= user.studentId || '-' %>" readonly>
                </div>
                <div class="form-group">
                    <label>이메일</label>
                    <input type="email" value="<%= user.email %>" readonly>
                </div>
                <div class="form-group">
                    <label>역할</label>
                    <select disabled>
                        <option value="ADMIN" <%=user.role==='ADMIN' ? 'selected' : '' %>>관리자</option>
                        <option value="ARTIST" <%=user.role==='ARTIST' ? 'selected' : '' %>>작가</option>
                        <option value="CLUB_MEMBER" <%=user.role==='CLUB_MEMBER' ? 'selected' : '' %>>동아리 회원
                        </option>
                        <option value="GUEST" <%=user.role==='GUEST' ? 'selected' : '' %>>게스트</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>상태</label>
                    <select disabled>
                        <option value="ACTIVE" <%=user.status==='ACTIVE' ? 'selected' : '' %>>활성</option>
                        <option value="INACTIVE" <%=user.status==='INACTIVE' ? 'selected' : '' %>>비활성</option>
                        <option value="SUSPENDED" <%=user.status==='SUSPENDED' ? 'selected' : '' %>>정지</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>가입일</label>
                    <input type="text" value="<%= new Date(user.createdAt).toLocaleDateString() %>" readonly>
                </div>
                <div class="form-group">
                    <label>수정일</label>
                    <input type="text" value="<%= new Date(user.updatedAt).toLocaleDateString() %>" readonly>
                </div>
            </div>
        </div>
        <div class="section-footer">
            <div class="admin-button-group">
                <button class="admin-button admin-button--secondary" onclick="handleEdit()">
                    <i class="fas fa-edit"></i>
                    수정
                </button>
                <button class="admin-button admin-button--danger" onclick="handleBlockUser()">
                    <i class="fas fa-ban"></i>
                    정지
                </button>
            </div>
        </div>
    </div>
</div>
<div class="admin-back-button-container">
    <a onclick="history.back()" class="admin-button admin-button--backtolist">
        <i class="fas fa-list"></i>
        목록으로
    </a>
</div>

<script>
    function handleEdit() {
        const form = document.getElementById('userForm');
        const inputs = form.querySelectorAll('input, select');
        inputs.forEach(input => {
            if (input.type !== 'text' || input.value !== user.username) {
                input.readOnly = false;
                input.disabled = false;
            }
        });

        const actionButtons = `
        <button type="button" class="btn btn-success" onclick="handleSave()">
            저장
        </button>
        <button type="button" class="btn btn-secondary" onclick="handleCancel()">
            취소
        </button>
    `;
        document.querySelector('.action-buttons').innerHTML = actionButtons;
    }

    function handleSave() {
        // TODO: 저장 로직 구현
    }

    function handleCancel() {
        location.reload();
    }

    function handleResetPassword() {
        if (confirm('해당 사용자의 비밀번호를 초기화하시겠습니까?')) {
            // TODO: 비밀번호 초기화 로직 구현
        }
    }

    function handleBlockUser() {
        if (confirm('해당 사용자의 계정을 차단하시겠습니까?')) {
            // TODO: 계정 차단 로직 구현
        }
    }

    function handleUnblockUser() {
        if (confirm('해당 사용자의 계정 차단을 해제하시겠습니까?')) {
            // TODO: 차단 해제 로직 구현
        }
    }
</script>
