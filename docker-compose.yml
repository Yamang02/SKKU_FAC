services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: skku_gallery_app
    ports:
      - "3000:3000"
    env_file:
      - .env.docker
    volumes:
      - .:/app:cached
      - /app/node_modules
      - /app/logs
    depends_on:
      mysql:
        condition: service_healthy
    command: npx nodemon src/server.js
    networks:
      - gallery_network

  test-env:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: skku_gallery_test
    ports:
      - "3001:3000" # 호스트 3001 포트 → 컨테이너 3000 포트
    env_file:
      - .env.test
    volumes:
      - .:/app:cached
      - /app/node_modules
      - /app/logs
    depends_on:
      mysql-test:
        condition: service_healthy
    command: npx nodemon src/server.js
    networks:
      - gallery_network

  mysql:
    image: mysql:8.0
    container_name: skku_gallery_mysql
    environment:
      MYSQL_ROOT_PASSWORD: devpassword
      MYSQL_DATABASE: skku_sfa_gallery
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3307:3306" # 로컬 3306 충돌 피해서 3307로 매핑
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pdevpassword" ]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s
    networks:
      - gallery_network

  mysql-test:
    image: mysql:8.0
    container_name: skku_gallery_mysql_test
    environment:
      MYSQL_ROOT_PASSWORD: testpassword
      MYSQL_DATABASE: skku_sfa_gallery_test
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3308:3306" # 테스트용 포트
    volumes:
      - mysql_test_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ptestpassword" ]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s
    networks:
      - gallery_network

volumes:
  mysql_data:
  mysql_test_data:


networks:
  gallery_network:
