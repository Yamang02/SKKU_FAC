services:
  # 🚀 SKKU Fine Art Club Gallery Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: skku_gallery_app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      # 로컬 개발: MySQL 컨테이너, Railway: MySQL 내부 인스턴스
      - DB_HOST=${DB_HOST:-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD:-devpassword}
      - DB_NAME=${DB_NAME:-skku_sfa_gallery}
      # 외부 Redis 서비스 사용 (로컬 개발 시에도 실제 외부 서비스)
      - REDIS_URL=${REDIS_URL}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # Cloudinary 외부 서비스 (로컬 개발 시에도 실제 외부 서비스)
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      # 기타 환경 변수
      - JWT_SECRET=${JWT_SECRET:-local_development_secret}
      - SESSION_SECRET=${SESSION_SECRET:-local_session_secret}
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - gallery_network
    volumes:
      - .:/app
      - /app/node_modules
    command: ${DOCKER_COMMAND:-npm run dev}

  # 🗄️ MySQL Database (로컬 개발용 - Railway에서는 내부 인스턴스 사용)
  mysql:
    image: mysql:8.0
    container_name: skku_gallery_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: devpassword
      MYSQL_DATABASE: skku_sfa_gallery
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    networks:
      - gallery_network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./config/mysql:/etc/mysql/conf.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pdevpassword"]
      timeout: 20s
      retries: 10
      interval: 30s
      start_period: 30s

  # 🧪 Integration Test Environment
  mysql_test:
    image: mysql:8.0
    container_name: skku_gallery_mysql_test
    restart: "no"
    environment:
      MYSQL_ROOT_PASSWORD: testpassword
      MYSQL_DATABASE: skku_sfa_gallery_test
    ports:
      - "3307:3306"  # 테스트용 별도 포트
    networks:
      - test_network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ptestpassword"]
      timeout: 10s
      retries: 5
    profiles:
      - test

  redis_test:
    image: redis:7-alpine
    container_name: skku_gallery_redis_test
    restart: "no"
    ports:
      - "6380:6379"  # 테스트용 별도 포트
    networks:
      - test_network
    command: redis-server --save "" --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 3
    profiles:
      - test

# 💾 Data Persistence (로컬 개발용)
volumes:
  mysql_data:
    driver: local

# 🌐 Networks
networks:
  gallery_network:
    driver: bridge
    name: skku_gallery_network
  test_network:
    driver: bridge
    name: skku_gallery_test_network
