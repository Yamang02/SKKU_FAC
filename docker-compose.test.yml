version: '3.8'

# 임시 테스트용 - MySQL과 Redis만 실행
# 사용법: docker-compose -f docker-compose.test.yml --env-file .env.docker up

env_file:
  - .env.docker

services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: skku_gallery_mysql_test
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS:-your_password}
      MYSQL_DATABASE: ${DB_NAME:-skku_gallery}
      MYSQL_USER: ${DB_USER:-root}
      MYSQL_PASSWORD: ${DB_PASS:-your_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
    networks:
      - gallery_test_network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASS:-your_password}"]
      timeout: 20s
      retries: 10

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: skku_gallery_redis_test
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_test_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - gallery_test_network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5

volumes:
  mysql_test_data:
    driver: local
  redis_test_data:
    driver: local

networks:
  gallery_test_network:
    driver: bridge
    name: skku_gallery_test_network
