{
    "name": "skku-fac-gallery",
    "version": "1.0.0",
    "description": "SKKU Faculty Art Gallery Website",
    "main": "server.js",
    "type": "module",
    "imports": {
        "#src/*": "./src/*",
        "#common/*": "./src/common/*",
        "#domain/*": "./src/domain/*",
        "#infrastructure/*": "./src/infrastructure/*",
        "#config/*": "./src/config/*",
        "#public/*": "./src/public/*"
    },
    "engines": {
        "node": ">=14.0.0"
    },
    "scripts": {
        "// === 🐳 DOCKER-FIRST DEVELOPMENT ===": "",
        "dev": "docker-compose up -d && echo '🚀 Docker 개발 환경이 실행되었습니다. http://localhost:3000' && echo '로그를 확인하려면: npm run dev:logs'",
        "dev:build": "docker-compose up -d --build && echo '🔨 Docker 이미지 빌드 후 개발 환경이 실행되었습니다.'",
        "dev:logs": "docker-compose logs -f app",
        "dev:shell": "docker-compose exec app sh",
        "dev:stop": "docker-compose down",
        "dev:restart": "docker-compose restart app",
        "dev:clean": "docker-compose down -v && docker system prune -f && echo '🧹 Docker 환경이 완전히 정리되었습니다.'",
        "// === 🔧 SETUP & MAINTENANCE ===": "",
        "setup": "npm install && npm run test:install && docker-compose build && echo '✅ 전체 개발 환경 설정이 완료되었습니다.'",
        "setup:docker": "docker-compose build && echo '🐳 Docker 이미지 빌드가 완료되었습니다.'",
        "// === 🏗️ BUILD & DEPLOYMENT ===": "",
        "build": "docker-compose build app",
        "build:railway": "docker build -t skku-gallery .",
        "start": "NODE_ENV=production node ./src/server.js",
        "start:test": "NODE_ENV=test node src/server.js",
        "// === 🗄️ DATABASE ===": "",
        "db:start": "docker-compose up -d mysql && echo '🗄️ MySQL 데이터베이스가 실행되었습니다.'",
        "db:migrate": "docker-compose exec app npm run migrate",
        "db:seed": "docker-compose exec app npm run seed",
        "db:reset": "docker-compose exec app npm run reset",
        "db:seed-test-data": "node scripts/test-data-seeding.js",
        "// === 🎭 E2E TESTING (DOCKER-BASED) ===": "",
        "test:setup:simple": "docker-compose stop app && docker-compose up -d mysql-test test-env && node -e \"console.log('⏳ 컨테이너 시작 대기 중...'); setTimeout(() => process.exit(0), 15000)\" && npm run db:seed-test-data && echo '🧪 테스트 환경 준비 완료'",
        "test": "npm run test:setup:simple && playwright test && npm run test:cleanup",
        "test:headed": "npm run test:setup:simple && cross-env HEADLESS=false playwright test --headed && npm run test:cleanup",
        "test:cleanup": "docker-compose stop test-env && docker-compose up -d app && echo '🔄 개발 환경 복구 완료'",
        "test:ui": "npm run test:setup:simple && cross-env HEADLESS=false playwright test --ui",
        "test:debug": "npm run test:setup:simple && cross-env HEADLESS=false playwright test --debug",
        "test:headless": "npm run test:setup:simple && playwright test",
        "test:install": "playwright install",
        "test:clean": "rimraf test-results playwright-report && mkdir -p test-results",
        "test:report": "playwright show-report",
        "// === 📝 FEATURE-SPECIFIC E2E TESTS ===": "",
        "test:auth": "npm run test -- tests/e2e/auth/",
        "test:auth:signup": "npm run test:headed -- tests/e2e/auth/detailed-signup-behavior-test.spec.js",
        "test:auth:signup:dev": "set TEST_BASE_URL=http://localhost:3000 && npx playwright test tests/e2e/auth/detailed-signup-behavior-test.spec.js --headed",
        "test:auth:login": "npm run test:headed -- tests/e2e/auth/login-examples.spec.js",
        "test:auth:profile": "npm run test:headed -- tests/e2e/auth/profile-access-flow-test.spec.js",
        "test:exhibition": "npm run test:headed -- tests/e2e/exhibition/",
        "test:artwork": "npm run test:headed -- tests/e2e/artwork/",
        "test:admin": "npm run test:headed -- tests/e2e/admin/",
        "// === 🌍 ENVIRONMENT-SPECIFIC TESTS ===": "",
        "test:local": "npm run test",
        "test:railway": "npx railway run -- playwright test",
        "test:full": "npm run test:auth && npm run test:exhibition && npm run test:artwork && npm run test:admin",
        "// === 🔍 CODE QUALITY (CONTAINERIZED) ===": "",
        "lint": "docker-compose exec app npx eslint --config .eslintrc.json src/",
        "lint:fix": "docker-compose exec app npx eslint --config .eslintrc.json src/ --fix",
        "lint:css": "docker-compose exec app npx stylelint --config .stylelintrc.json \"./src/public/css/**/*.css\" --quiet",
        "lint:css:fix": "docker-compose exec app npx stylelint --config .stylelintrc.json \"./src/public/css/**/*.css\" --fix --quiet",
        "format": "docker-compose exec app npx prettier --write \"src/**/*.{js,css,ejs,md}\" \"tests/**/*.js\" \"docs/**/*.md\" \"*.{js,json,md}\"",
        "format:check": "docker-compose exec app npx prettier --check \"src/**/*.{js,css,ejs,md}\" \"tests/**/*.js\" \"docs/**/*.md\" \"*.{js,json,md}\"",
        "format:css": "docker-compose exec app npx prettier --write \"src/public/css/**/*.css\"",
        "analyze": "npm run lint && npm run lint:css && npm run format:check && echo '📊 코드 분석이 완료되었습니다.'",
        "quality": "npm run lint && npm run lint:css && npm run format && echo '✨ 코드 품질 검사가 완료되었습니다.'",
        "// === 🚂 RAILWAY MONITORING ===": "",
        "railway:login": "npx railway login",
        "railway:link": "npx railway link",
        "railway:status": "npx railway status",
        "railway:list": "npx railway list",
        "railway:service": "npx railway service",
        "railway:logs": "npx railway logs",
        "railway:open": "npx railway open",
        "// === 🔧 CONTAINER INTERNAL SCRIPTS ===": "",
        "dev:nodemon": "cross-env NODE_ENV=development npx nodemon ./src/server.js",
        "// === 🔧 LEGACY SCRIPTS (DEPRECATED) ===": "",
        "_legacy:dev": "cross-env NODE_ENV=development npx nodemon ./src/server.js",
        "_legacy:docker:dev": "docker-compose up -d"
    },
    "dependencies": {
        "@sentry/node": "^9.25.1",
        "@sentry/profiling-node": "^9.25.1",
        "audit-ci": "^7.1.0",
        "bcrypt": "^5.1.1",
        "body-parser": "^1.20.2",
        "cache-manager": "^6.4.3",
        "cache-manager-redis-store": "^2.0.0",
        "compression": "^1.8.0",
        "connect-flash": "^0.1.1",
        "connect-redis": "^8.1.0",
        "cors": "^2.8.5",
        "cross-env": "^7.0.3",
        "csrf": "^3.1.0",
        "dompurify": "^3.2.6",
        "dotenv": "^16.4.7",
        "ejs": "^3.1.9",
        "express": "^4.18.2",
        "express-basic-auth": "^1.2.1",
        "express-rate-limit": "^7.5.0",
        "express-session": "^1.18.1",
        "express-slow-down": "^2.1.0",
        "express-validator": "^7.2.1",
        "helmet": "^8.1.0",
        "html2canvas": "^1.4.1",
        "joi": "^17.9.2",
        "jsdom": "^26.1.0",
        "jsonwebtoken": "^9.0.2",
        "method-override": "^3.0.0",
        "morgan": "^1.10.0",
        "multer": "^2.0.0",
        "multer-storage-cloudinary": "^4.0.0",
        "mysql2": "^3.14.0",
        "node-forge": "^1.3.1",
        "nodemailer": "^6.10.1",
        "passport": "^0.7.0",
        "passport-google-oauth20": "^2.0.0",
        "passport-jwt": "^4.0.1",
        "passport-local": "^1.0.0",
        "pidusage": "^4.0.1",
        "pino": "^9.6.0",
        "pino-pretty": "^13.0.0",
        "playwright": "^1.52.0",
        "prom-client": "^15.1.3",
        "qrcode": "^1.5.4",
        "rate-limit-redis": "^4.2.1",
        "redis": "^5.1.0",
        "sequelize": "^6.37.7",
        "sharp": "^0.33.5",
        "swagger-jsdoc": "^6.2.8",
        "swagger-ui-express": "^5.0.1",
        "task-master-ai": "^0.16.0",
        "uuid": "^11.1.0",
        "winston": "^3.8.2",
        "winston-daily-rotate-file": "^5.0.0"
    },
    "devDependencies": {
        "@eslint/js": "^9.21.0",
        "@faker-js/faker": "^9.8.0",
        "@playwright/test": "^1.52.0",
        "eslint": "^8.57.1",
        "eslint-plugin-filenames": "^1.3.2",
        "eslint-plugin-folders": "^1.0.4",
        "eslint-plugin-html": "^8.1.2",
        "globals": "^16.0.0",
        "nodemon": "^3.0.1",
        "prettier": "^3.4.2",
        "purgecss": "^7.0.2",
        "stylelint": "^16.15.0",
        "stylelint-config-standard": "^37.0.0",
        "stylelint-order": "^6.0.4",
        "typescript-eslint": "^8.26.0"
    }
}
